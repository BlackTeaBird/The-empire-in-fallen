namespace = upgrade_to_founder_species

event = {
	id = upgrade_to_founder_species.0
	hide_window = yes
	is_triggered_only = yes
	trigger = {
		any_country = {
			OR = {
				is_country_type = default
				is_country_type = fallen_empire
				is_country_type = awakened_fallen_empire
			}
			has_policy_flag = robot_pop_3_auto_upgrade_to_founder_species_start
			any_owned_pop = {
				has_trait = trait_mechanical
				NOT = { has_trait = trait_robot_awoken }
			}
		}
	}
	
	immediate = {
		every_playable_country = {
			limit = { has_policy_flag = robot_pop_3_auto_upgrade_to_founder_species_start }
			if = {
				limit = {
					any_owned_pop = {
						NOT = { is_same_species = prev }
						NOT = { has_trait = trait_robot_awoken }
						has_trait = trait_mechanical
					}
				}
				every_owned_planet = {
					planet_event = { id = upgrade_to_founder_species.1 }
				}
			}
		}
	}
}
planet_event = {
	id = upgrade_to_founder_species.1
	hide_window = yes
	is_triggered_only = yes
	immediate = {
		random_list = {
			1 = {
				while = {
					count = 1
					random_owned_pop = {
						limit = {
							has_trait = trait_mechanical
							NOT = { is_same_species = root.owner }
							NOT = { has_trait = trait_robot_awoken }
						}
						change_species = root.owner
					}
					give_updata_reward = yes
				}
			}
			1 = {
				while = {
					count = 2
					random_owned_pop = {
						limit = {
							has_trait = trait_mechanical
							NOT = { is_same_species = root.owner }
							NOT = { has_trait = trait_robot_awoken }
						}
						change_species = root.owner
					}
					give_updata_reward = yes
				}
			}
			1 = {
				while = {
					count = 3
					random_owned_pop = {
						limit = {
							has_trait = trait_mechanical
							NOT = { is_same_species = root.owner }
							NOT = { has_trait = trait_robot_awoken }
						}
						change_species = root.owner
					}
					give_updata_reward = yes
				}
			}
			1 = {
				while = {
					count = 4
					random_owned_pop = {
						limit = {
							has_trait = trait_mechanical
							NOT = { is_same_species = root.owner }
							NOT = { has_trait = trait_robot_awoken }
						}
						change_species = root.owner
					}
					give_updata_reward = yes
				}
			}
		}
	}
}